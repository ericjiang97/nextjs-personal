// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismicT from "@prismicio/types";
import type * as prismic from "@prismicio/client";

type Simplify<T> = {
    [KeyType in keyof T]: T[KeyType];
};
/**
 * Primary content in BeforeAfter → Primary
 *
 */
interface BeforeAfterSliceDefaultPrimary {
    /**
     * title field in *BeforeAfter → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: before_after.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
    /**
     * before image field in *BeforeAfter → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: before_after.primary.before_image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    before_image: prismicT.ImageField<never>;
    /**
     * after image field in *BeforeAfter → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: before_after.primary.after_image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    after_image: prismicT.ImageField<never>;
}
/**
 * Default variation for BeforeAfter Slice
 *
 * - **API ID**: `default`
 * - **Description**: `BeforeAfter`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type BeforeAfterSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<BeforeAfterSliceDefaultPrimary>, never>;
/**
 * Slice variation for *BeforeAfter*
 *
 */
type BeforeAfterSliceVariation = BeforeAfterSliceDefault;
/**
 * BeforeAfter Shared Slice
 *
 * - **API ID**: `before_after`
 * - **Description**: `BeforeAfter`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type BeforeAfterSlice = prismicT.SharedSlice<"before_after", BeforeAfterSliceVariation>;
/**
 * Primary content in ImageGroup → Primary
 *
 */
interface ImageGroupSliceDefaultPrimary {
    /**
     * title field in *ImageGroup → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: image_group.primary.title
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    title: prismicT.KeyTextField;
}
/**
 * Item in ImageGroup → Items
 *
 */
export interface ImageGroupSliceDefaultItem {
    /**
     * image field in *ImageGroup → Items*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: image_group.items[].image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
}
/**
 * Default variation for ImageGroup Slice
 *
 * - **API ID**: `default`
 * - **Description**: `ImageGroup`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImageGroupSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<ImageGroupSliceDefaultPrimary>, Simplify<ImageGroupSliceDefaultItem>>;
/**
 * Slice variation for *ImageGroup*
 *
 */
type ImageGroupSliceVariation = ImageGroupSliceDefault;
/**
 * ImageGroup Shared Slice
 *
 * - **API ID**: `image_group`
 * - **Description**: `ImageGroup`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImageGroupSlice = prismicT.SharedSlice<"image_group", ImageGroupSliceVariation>;
/**
 * Primary content in ImageWithTextonOneSide → Primary
 *
 */
interface ImageLeftSliceDefaultPrimary {
    /**
     * text field in *ImageWithTextonOneSide → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: image_left.primary.text
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    text: prismicT.RichTextField;
    /**
     * image field in *ImageWithTextonOneSide → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: image_left.primary.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
    /**
     * position field in *ImageWithTextonOneSide → Primary*
     *
     * - **Field Type**: Select
     * - **Placeholder**: *None*
     * - **Default Value**: left
     * - **API ID Path**: image_left.primary.position
     * - **Documentation**: https://prismic.io/docs/core-concepts/select
     *
     */
    position: prismicT.SelectField<"left" | "right", "filled">;
}
/**
 * Default variation for ImageWithTextonOneSide Slice
 *
 * - **API ID**: `default`
 * - **Description**: `ImageLeft`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImageLeftSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<ImageLeftSliceDefaultPrimary>, never>;
/**
 * Slice variation for *ImageWithTextonOneSide*
 *
 */
type ImageLeftSliceVariation = ImageLeftSliceDefault;
/**
 * ImageWithTextonOneSide Shared Slice
 *
 * - **API ID**: `image_left`
 * - **Description**: `ImageLeft`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type ImageLeftSlice = prismicT.SharedSlice<"image_left", ImageLeftSliceVariation>;
/**
 * Primary content in RichText → Primary
 *
 */
interface RichTextSliceDefaultPrimary {
    /**
     * richtext field in *RichText → Primary*
     *
     * - **Field Type**: Rich Text
     * - **Placeholder**: This is where it all begins...
     * - **API ID Path**: rich_text.primary.text
     * - **Documentation**: https://prismic.io/docs/core-concepts/rich-text-title
     *
     */
    text: prismicT.RichTextField;
}
/**
 * Default variation for RichText Slice
 *
 * - **API ID**: `default`
 * - **Description**: `RichText`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type RichTextSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<RichTextSliceDefaultPrimary>, never>;
/**
 * Slice variation for *RichText*
 *
 */
type RichTextSliceVariation = RichTextSliceDefault;
/**
 * RichText Shared Slice
 *
 * - **API ID**: `rich_text`
 * - **Description**: `RichText`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type RichTextSlice = prismicT.SharedSlice<"rich_text", RichTextSliceVariation>;

/**
 * Primary content in SingleImage → Primary
 *
 */
interface SingleImageSliceDefaultPrimary {
    /**
     * image field in *SingleImage → Primary*
     *
     * - **Field Type**: Image
     * - **Placeholder**: *None*
     * - **API ID Path**: single_image.primary.image
     * - **Documentation**: https://prismic.io/docs/core-concepts/image
     *
     */
    image: prismicT.ImageField<never>;
    /**
     * description field in *SingleImage → Primary*
     *
     * - **Field Type**: Text
     * - **Placeholder**: *None*
     * - **API ID Path**: single_image.primary.description
     * - **Documentation**: https://prismic.io/docs/core-concepts/key-text
     *
     */
    description: prismicT.KeyTextField;
}
/**
 * Default variation for SingleImage Slice
 *
 * - **API ID**: `default`
 * - **Description**: `SingleImage`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type SingleImageSliceDefault = prismicT.SharedSliceVariation<"default", Simplify<SingleImageSliceDefaultPrimary>, never>;
/**
 * Slice variation for *SingleImage*
 *
 */
type SingleImageSliceVariation = SingleImageSliceDefault;
/**
 * SingleImage Shared Slice
 *
 * - **API ID**: `single_image`
 * - **Description**: `SingleImage`
 * - **Documentation**: https://prismic.io/docs/core-concepts/reusing-slices
 *
 */
export type SingleImageSlice = prismicT.SharedSlice<"single_image", SingleImageSliceVariation>;
declare module "@prismicio/client" {
    interface CreateClient {
        (repositoryNameOrEndpoint: string, options?: prismic.ClientConfig): prismic.Client;
    }
    namespace Content {
        export type { BeforeAfterSliceDefaultPrimary, BeforeAfterSliceDefault, BeforeAfterSliceVariation, BeforeAfterSlice, ImageGroupSliceDefaultPrimary, ImageGroupSliceDefaultItem, ImageGroupSliceDefault, ImageGroupSliceVariation, ImageGroupSlice, ImageLeftSliceDefaultPrimary, ImageLeftSliceDefault, ImageLeftSliceVariation, ImageLeftSlice, RichTextSliceDefaultPrimary, RichTextSliceDefault, RichTextSliceVariation, RichTextSlice, SingleImageSliceDefaultPrimary, SingleImageSliceDefault, SingleImageSliceVariation, SingleImageSlice };

    }
}
