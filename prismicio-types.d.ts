// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type AlbumDocumentDataBodySlice =
  | BeforeAfterSlice
  | RichTextSlice
  | ImageGroupSlice
  | SingleImageSlice
  | ImageLeftSlice;

/**
 * Content for album documents
 */
interface AlbumDocumentData {
  /**
   * title field in *album*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: album.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Description field in *album*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: album.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * featured image field in *album*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: album.featured_image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  featured_image: prismic.ImageField<never>;

  /**
   * Slice zone field in *album*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: album.body[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  body: prismic.SliceZone<AlbumDocumentDataBodySlice>;
}

/**
 * album document from Prismic
 *
 * - **API ID**: `album`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type AlbumDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<AlbumDocumentData>, "album", Lang>;

type BlogPostDocumentDataBody1Slice = BeforeAfterSlice;

/**
 * Content for blog-post documents
 */
interface BlogPostDocumentData {
  /**
   * title field in *blog-post*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: blog-post.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * author field in *blog-post*
   *
   * - **Field Type**: Title
   * - **Placeholder**: Eric Jiang <eric@ericjiang.dev>
   * - **API ID Path**: blog-post.author
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  author: prismic.TitleField;

  /**
   * published_time field in *blog-post*
   *
   * - **Field Type**: Timestamp
   * - **Placeholder**: *None*
   * - **API ID Path**: blog-post.published_time
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#timestamp
   */
  published_time: prismic.TimestampField;

  /**
   * preview field in *blog-post*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: blog-post.preview
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  preview: prismic.BooleanField;

  /**
   * category field in *blog-post*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: blog-post.category
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  category: prismic.ContentRelationshipField<"category">;

  /**
   * summary field in *blog-post*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: blog-post.summary
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  summary: prismic.RichTextField;

  /**
   * banner field in *blog-post*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: blog-post.banner
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  banner: prismic.ImageField<never>;

  /**
   * body field in *blog-post*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: blog-post.body
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  body: prismic.RichTextField;

  /**
   * Slice zone field in *blog-post*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: blog-post.body1[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  body1: prismic.SliceZone<BlogPostDocumentDataBody1Slice>;
}

/**
 * blog-post document from Prismic
 *
 * - **API ID**: `blog-post`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogPostDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<BlogPostDocumentData>,
    "blog-post",
    Lang
  >;

/**
 * Content for category documents
 */
interface CategoryDocumentData {
  /**
   * category_name field in *category*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: category.category_name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  category_name: prismic.KeyTextField;
}

/**
 * category document from Prismic
 *
 * - **API ID**: `category`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type CategoryDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<CategoryDocumentData>,
    "category",
    Lang
  >;

interface HomepageDocumentData {}

/**
 * Homepage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<HomepageDocumentData>,
    "homepage",
    Lang
  >;

/**
 * Content for tag documents
 */
interface TagDocumentData {
  /**
   * tag field in *tag*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: tag.tag
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  tag: prismic.KeyTextField;
}

/**
 * tag document from Prismic
 *
 * - **API ID**: `tag`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type TagDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<TagDocumentData>, "tag", Lang>;

/**
 * Content for tech-talk documents
 */
interface TechTalkDocumentData {
  /**
   * title field in *tech-talk*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: tech-talk.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * link field in *tech-talk*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: tech-talk.link
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * date field in *tech-talk*
   *
   * - **Field Type**: Date
   * - **Placeholder**: *None*
   * - **API ID Path**: tech-talk.date
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#date
   */
  date: prismic.DateField;

  /**
   * org field in *tech-talk*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: tech-talk.org
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  org: prismic.TitleField;
}

/**
 * tech-talk document from Prismic
 *
 * - **API ID**: `tech-talk`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type TechTalkDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<TechTalkDocumentData>,
    "tech-talk",
    Lang
  >;

export type AllDocumentTypes =
  | AlbumDocument
  | BlogPostDocument
  | CategoryDocument
  | HomepageDocument
  | TagDocument
  | TechTalkDocument;

/**
 * Primary content in *BeforeAfter → Default → Primary*
 */
export interface BeforeAfterSliceDefaultPrimary {
  /**
   * title field in *BeforeAfter → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  title: prismic.KeyTextField;

  /**
   * before image field in *BeforeAfter → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after.default.primary.before_image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  before_image: prismic.ImageField<never>;

  /**
   * after image field in *BeforeAfter → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: before_after.default.primary.after_image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  after_image: prismic.ImageField<never>;
}

/**
 * Default variation for BeforeAfter Slice
 *
 * - **API ID**: `default`
 * - **Description**: BeforeAfter
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type BeforeAfterSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<BeforeAfterSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *BeforeAfter*
 */
type BeforeAfterSliceVariation = BeforeAfterSliceDefault;

/**
 * BeforeAfter Shared Slice
 *
 * - **API ID**: `before_after`
 * - **Description**: BeforeAfter
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type BeforeAfterSlice = prismic.SharedSlice<
  "before_after",
  BeforeAfterSliceVariation
>;

/**
 * Primary content in *ImageGroup → Default → Primary*
 */
export interface ImageGroupSliceDefaultPrimary {
  /**
   * title field in *ImageGroup → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: image_group.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  title: prismic.KeyTextField;
}

/**
 * Primary content in *ImageGroup → Items*
 */
export interface ImageGroupSliceDefaultItem {
  /**
   * image field in *ImageGroup → Items*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: image_group.items[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;
}

/**
 * Default variation for ImageGroup Slice
 *
 * - **API ID**: `default`
 * - **Description**: ImageGroup
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ImageGroupSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ImageGroupSliceDefaultPrimary>,
  Simplify<ImageGroupSliceDefaultItem>
>;

/**
 * Slice variation for *ImageGroup*
 */
type ImageGroupSliceVariation = ImageGroupSliceDefault;

/**
 * ImageGroup Shared Slice
 *
 * - **API ID**: `image_group`
 * - **Description**: ImageGroup
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ImageGroupSlice = prismic.SharedSlice<
  "image_group",
  ImageGroupSliceVariation
>;

/**
 * Primary content in *ImageWithTextonOneSide → Default → Primary*
 */
export interface ImageLeftSliceDefaultPrimary {
  /**
   * text field in *ImageWithTextonOneSide → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: This is where it all begins...
   * - **API ID Path**: image_left.default.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * image field in *ImageWithTextonOneSide → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: image_left.default.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * position field in *ImageWithTextonOneSide → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: left
   * - **API ID Path**: image_left.default.primary.position
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  position: prismic.SelectField<"left" | "right", "filled">;
}

/**
 * Default variation for ImageWithTextonOneSide Slice
 *
 * - **API ID**: `default`
 * - **Description**: ImageLeft
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ImageLeftSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ImageLeftSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *ImageWithTextonOneSide*
 */
type ImageLeftSliceVariation = ImageLeftSliceDefault;

/**
 * ImageWithTextonOneSide Shared Slice
 *
 * - **API ID**: `image_left`
 * - **Description**: ImageLeft
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ImageLeftSlice = prismic.SharedSlice<
  "image_left",
  ImageLeftSliceVariation
>;

/**
 * Primary content in *RichText → Default → Primary*
 */
export interface RichTextSliceDefaultPrimary {
  /**
   * richtext field in *RichText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: This is where it all begins...
   * - **API ID Path**: rich_text.default.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Default variation for RichText Slice
 *
 * - **API ID**: `default`
 * - **Description**: RichText
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type RichTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<RichTextSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *RichText*
 */
type RichTextSliceVariation = RichTextSliceDefault;

/**
 * RichText Shared Slice
 *
 * - **API ID**: `rich_text`
 * - **Description**: RichText
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type RichTextSlice = prismic.SharedSlice<
  "rich_text",
  RichTextSliceVariation
>;

/**
 * Primary content in *SingleImage → Default → Primary*
 */
export interface SingleImageSliceDefaultPrimary {
  /**
   * image field in *SingleImage → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: single_image.default.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * description field in *SingleImage → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: single_image.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  description: prismic.KeyTextField;
}

/**
 * Default variation for SingleImage Slice
 *
 * - **API ID**: `default`
 * - **Description**: SingleImage
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SingleImageSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<SingleImageSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *SingleImage*
 */
type SingleImageSliceVariation = SingleImageSliceDefault;

/**
 * SingleImage Shared Slice
 *
 * - **API ID**: `single_image`
 * - **Description**: SingleImage
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type SingleImageSlice = prismic.SharedSlice<
  "single_image",
  SingleImageSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      AlbumDocument,
      AlbumDocumentData,
      AlbumDocumentDataBodySlice,
      BlogPostDocument,
      BlogPostDocumentData,
      BlogPostDocumentDataBody1Slice,
      CategoryDocument,
      CategoryDocumentData,
      HomepageDocument,
      HomepageDocumentData,
      TagDocument,
      TagDocumentData,
      TechTalkDocument,
      TechTalkDocumentData,
      AllDocumentTypes,
      BeforeAfterSlice,
      BeforeAfterSliceDefaultPrimary,
      BeforeAfterSliceVariation,
      BeforeAfterSliceDefault,
      ImageGroupSlice,
      ImageGroupSliceDefaultPrimary,
      ImageGroupSliceDefaultItem,
      ImageGroupSliceVariation,
      ImageGroupSliceDefault,
      ImageLeftSlice,
      ImageLeftSliceDefaultPrimary,
      ImageLeftSliceVariation,
      ImageLeftSliceDefault,
      RichTextSlice,
      RichTextSliceDefaultPrimary,
      RichTextSliceVariation,
      RichTextSliceDefault,
      SingleImageSlice,
      SingleImageSliceDefaultPrimary,
      SingleImageSliceVariation,
      SingleImageSliceDefault,
    };
  }
}
